<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">
    <!--<bean id="filterChainProxy"-->
          <!--class="org.springframework.security.util.FilterChainProxy">-->
        <!--<property name="filterInvocationDefinitionSource">-->
            <!--<value>-->
                <!--CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON-->
                <!--PATTERN_TYPE_APACHE_ANT-->
                <!--/**=httpSessionContextIntegrationFilter,logoutFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="httpSessionContextIntegrationFilter"-->
          <!--class="org.springframework.security.context.HttpSessionContextIntegrationFilter"/>-->

    <!--<bean id="logoutFilter"-->
          <!--class="org.springframework.security.ui.logout.LogoutFilter">-->
        <!--<constructor-arg value="/logoutSuccess.jsp"/>-->
        <!--<constructor-arg>-->
            <!--<list>-->
                <!--<bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"/>-->
            <!--</list>-->
        <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="basicProcessingFilter"-->
          <!--class="org.springframework.security.ui.basicauth.BasicProcessingFilter">-->
        <!--<property name="authenticationManager" ref="authenticationManager"/>-->
        <!--<property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>-->
    <!--</bean>-->

    <!--<bean id="authenticationEntryPoint"-->
          <!--class="org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint">-->
        <!--<property name="realmName" value="Protected atlight"/>-->
    <!--</bean>-->

    <!--<bean id="authenticationProcessingFilter"-->
    <!--class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">-->
    <!--<property name="authenticationManager"-->
    <!--ref="authenticationManager"/>-->
    <!--<property name="authenticationFailureUrl"-->
    <!--value="/login.jsp?login_error=1"/>-->
    <!--<property name="defaultTargetUrl"-->
    <!--value="/protected/protected1.jsp"/>-->
    <!--<property name="filterProcessesUrl"-->
    <!--value="/j_acegi_security_check"/>-->
    <!--</bean>-->

    <!--<bean id="securityContextHolderAwareRequestFilter"-->
          <!--class="org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter"/>-->

    <!--<bean id="anonymousProcessingFilter"-->
          <!--class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">-->
        <!--<property name="key" value="changeThis"/>-->
        <!--<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>-->
    <!--</bean>-->

    <!--<bean id="exceptionTranslationFilter"-->
          <!--class="org.springframework.security.ui.ExceptionTranslationFilter">-->
        <!--<property name="authenticationEntryPoint">-->
            <!--<bean class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">-->
                <!--<property name="loginFormUrl" value="/login.jsp"/>-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="accessDeniedHandler">-->
            <!--<bean class="org.springframework.security.ui.AccessDeniedHandlerImpl">-->
                <!--<property name="errorPage" value="/accessDenied.jsp"/>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="filterInvocationInterceptor"
          class="org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="objectDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /protected/**=ROLE_HEAD_OF_ENGINEERING
                /**=IS_AUTHENTICATED_ANONYMOUSLY
            </value>
        </property>
    </bean>

    <bean id="authenticationManager"
          class="org.springframework.security.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions"
                  value="false"/>
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.vote.RoleVoter"/>
                <bean class="org.springframework.security.vote.AuthenticatedVoter"/>
            </list>
        </property>
    </bean>

    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="passwordEncoder">
            <bean class="org.springframework.security.providers.encoding.Md5PasswordEncoder"></bean>
        </property>
        <property name="saltSource">
            <bean class="org.springframework.security.providers.dao.salt.ReflectionSaltSource"></bean>
        </property>

        <!-- UserCache property will activate the cache, it is not
    mandatory but increases performance by cacheing the user
    details retrieved from user-core -->
        <!--<property name="userCache" ref="userCache"/>-->
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>org.postgresql.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:postgresql:stomatology</value>
        </property>
        <property name="username">
            <value>postgres</value>
        </property>
        <property name="password">
            <value>postgres</value>
        </property>
    </bean>

    <bean id="userDetailsService" class="org.springframework.security.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--<bean id="userCache" class="org.springframework.security.providers.dao.cache.EhCacheBasedUserCache">-->
        <!--<property name="cache">-->
            <!--<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">-->
                <!--<property name="cacheManager">-->
                    <!--<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>-->
                <!--</property>-->
                <!--<property name="cacheName" value="userCache"/>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- This bean is optional; it isn't used by any other bean as it only listens and logs -->
    <bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener"/>


</beans>